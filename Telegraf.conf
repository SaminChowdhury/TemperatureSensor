# Global tags can be specified here in key="value" format.
[global_tags]

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"

  round_interval = true


  metric_batch_size = 1000

  metric_buffer_limit = 10000

  collection_jitter = "0s"


  flush_interval = "10s"

  flush_jitter = "0s"


  precision = "0s"



  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################
[[outputs.influxdb]]
   ## The full HTTP or UDP URL for your InfluxDB instance.
   urls = ["http://localhost:8086"] # required

   ## The target database for metrics (telegraf will create it if not exists).
   database = "temperature" # required

   ## Name of existing retention policy to write to.  Empty string writes to
   ## the default retention policy.
   retention_policy = ""
   ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
   write_consistency = "any"

   ## Write timeout (for the InfluxDB client), formatted as a string.
   ## If not provided, will default to 5s. 0s means no timeout (not recommended).
   timeout = "10s"
   username = "telegraf"
   password = "metricsmetricsmetricsmetrics"




###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################


[[inputs.logparser]]
   ## file(s) to read:
   files = ["/home/isam/temperature.log"]

   # Only send these fields to the output plugins
   fieldpass = ["temperature", "humidity", "timestamp"]
   tagexclude = ["path"]

   # Read the file from beginning on telegraf startup.
   from_beginning = true
   name_override = "room_temperature_humidity"

   ## For parsing logstash-style "grok" patterns:
   [inputs.logparser.grok]
     patterns = ["%{TEMPERATURE_HUMIDITY_PATTERN}"]
     custom_patterns = '''
       TEMPERATURE_HUMIDITY_PATTERN %{NUMBER:timestamp:ts-epoch} Temp=%{NUMBER:temperature:float} %{GREEDYDATA}=%{NUMBER:humidity:float}%{GREEDYDATA}
     '''
     timezone = "America/New_York"

